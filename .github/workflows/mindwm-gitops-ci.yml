name: allure-test-report

on:
  workflow_dispatch:
  pull_request:
    branches-ignore: [ "dev/*" ]

permissions:
  checks: write
  contents: write
  issues: write
  pull-requests: write

env:
  terraform_artifact_name: "terraform-${{ github.run_number }}-${{ github.run_attempt }}"
  terraform_state_artifact_name: "terraform-state-${{ github.run_number }}-${{ github.run_attempt }}"
  test_artifact_name: "test-${{ github.run_number }}-${{ github.run_attempt }}"

jobs:
  set_env:
    runs-on: ubuntu-24.04
    outputs:
      terraform_artifact_name: ${{ steps.set.outputs.terraform_artifact_name }}
      terraform_state_artifact_name: ${{ steps.set.outputs.terraform_state_artifact_name }}
      test_artifact_name: ${{ steps.set.outputs.test_artifact_name }}
    steps:
      - name: set outputs with default values
        id: set
        run: |    
          echo "terraform_artifact_name=${{ env.terraform_artifact_name }}" >> $GITHUB_OUTPUT
          echo "terraform_state_artifact_name=${{ env.terraform_state_artifact_name }}" >> $GITHUB_OUTPUT
          echo "test_artifact_name=${{ env.test_artifact_name }}" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref || 'master' }}
          repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}

      - name: Upload terraform manifest 
        uses: actions/upload-artifact@v4
        with:
          name: "${{ steps.set.outputs.terraform_artifact_name }}"
          path: ./tests/e2e/


  compute_deploy:
    needs: set_env
    uses: ./.github/workflows/linode_compute_deploy.yml
    with:
      artifact_name: ${{ needs.set_env.outputs.terraform_artifact_name }}
      artifact_state_name: ${{ needs.set_env.outputs.terraform_state_artifact_name }}
    secrets:
      LINODE_TOKEN: ${{ secrets.CI_LINODE_TOKEN }}
      ROOT_PASSWORD: ${{ secrets.CI_ROOT_PASSWORD }}
      SSH_KEY: ${{ secrets.CI_SSH_KEY }}

  run_tests:
    needs: [set_env, compute_deploy]
    uses: ./.github/workflows/run_test.yml
    with:
      node_ip_addr: ${{ needs.compute_deploy.outputs.node_ip_addr }}
      test_name: fake_test_fail
      git_branch: ${{ github.event.pull_request.head.ref || 'master' }}
      git_repo: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
      artifact_dir: /tmp/artifacts
    secrets:
      SSH_KEY: ${{ secrets.CI_SSH_KEY }}

  # download artifacts from the remote hosts and safe as github artifact
  download_test_artifacts:
    needs: [set_env, compute_deploy, run_tests]
    uses: ./.github/workflows/download_artifacts.yml
    with:
      node_ip_addr: ${{ needs.compute_deploy.outputs.node_ip_addr }}
      # remote dir
      artifact_dir: /tmp/artifacts
      # github artifact name
      artifact_name: ${{ needs.set_env.outputs.test_artifact_name }}
    secrets:
      SSH_KEY: ${{ secrets.CI_SSH_KEY }}

  upload-report:
    needs: [set_env, compute_deploy, run_tests, download_test_artifacts]
    uses: ./.github/workflows/allure-report-reusable.yml
    with:
      artifact_name: ${{ needs.set_env.outputs.test_artifact_name }}
    secrets:
      MINDWM_TOKEN: ${{ secrets.MINDWM_TOKEN }}

  pr_comment:
    if: github.event_name == 'pull_request'
    needs: [set_env, download_test_artifacts]
    uses: ./.github/workflows/pr_allure_comment.yml
    with:
      artifact_name: ${{ needs.set_env.outputs.test_artifact_name }}

  compute_destroy:
    if: always()
    needs: [set_env, download_test_artifacts]
    uses: ./.github/workflows/linode_compute_destroy.yml
    with:
      artifact_name: ${{ needs.set_env.outputs.terraform_state_artifact_name }}
    secrets:
      LINODE_TOKEN: ${{ secrets.CI_LINODE_TOKEN }}
      ROOT_PASSWORD: ${{ secrets.CI_ROOT_PASSWORD }}
      SSH_KEY: ${{ secrets.CI_SSH_KEY }}
